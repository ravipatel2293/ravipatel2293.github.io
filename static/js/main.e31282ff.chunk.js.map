{"version":3,"sources":["components/Common/Header.js","components/Common/ToggleSwitch.js","components/SectionHeader.js","components/Common/constant.js","components/RenderPositions.js","components/KeyCustomization.js","components/AdvancedCustomization.js","components/basi.js","App.js","serviceWorker.js","index.js"],"names":["Header","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","tabcount","props","setTab","_this","react_default","a","createElement","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","activeTab","onClick","setTabCount","React","Component","ToggleSwitch","labelTitle","name","nameAttribute","onChange","e","handleInputChange","checked","bindValue","currencySwitcherOptions","label","postionMesaureOptions","priceFormatOptions","RenderPositions","selectedPostion","getObjectToBIndCSwitcher","getPositionMesaure","postionMesure","positionSpace","handleDropDownChange","objectSpread","react_select_esm","theme","colors","primary25","primary","event","inputProps","filter","item","currencySpaces","positionBottom","options","positionTop","positionLeft","positionRight","divStyle","margin","MultiValue","data","Option","render","isSelected","Basic","call","state","showSearch","searchText","enteredText","listOfArray","isChecked","filtered","setWrapperRef","bind","assertThisInitialized","handleClickOutside","setState","toConsumableArray","document","addEventListener","removeEventListener","wrapperRef","contains","target","node","searchTerm","toLowerCase","newList","includes","console","log","selectedItem","index","newArray","_this2","renderedLi","map","valueChanged","showSearchContainer","ref","searchInputChanged","classNamePrefix","isSearchable","style","closeMenuOnSelect","placeholder","hideSelectedOptions","isMulti","components","autoBlur","option","App","defineProperty","tabCount","getParams","location","searchParams","URLSearchParams","search","shopName","get","planName","setValueForSuppoertedCurrencies","selectedDropDownOption","nameOfDropDown","supportedCurrenciesString","length","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","trimRight","saveSettings","postData","position","axios","post","then","res","enable","autoSwitch","roundDecimal","hideDecimal","displayFlag","currencyFormat","currency","supportedCurrencies","defaultCurrency","password_enabled","storeName","window","Header_Header","basi_Basic","Boolean","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e31282ff.chunk.js","sourcesContent":["import React from 'react';\n\nimport '../../styles/common/header.scss'\n\n/*contains html and code for header*/\nexport class Header extends React.Component {\n\n    /* set the tabcount and pass that value to header component */\n    setTabCount(tabcount) {\n        this\n            .props\n            .setTab(tabcount);\n    }\n\n    render() {\n        return (\n            <div className=\"\">\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-nav-color\">\n                    <span className=\"navbar-brand\">Test</span>\n                    <button\n                        className=\"navbar-toggler\"\n                        type=\"button\"\n                        data-toggle=\"collapse\"\n                        data-target=\"#navbarNav\"\n                        aria-controls=\"navbarNav\"\n                        aria-expanded=\"false\"\n                        aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                        <ul className=\"navbar-nav\">\n                            <li\n                                className={\"nav-item \" + (this.props.activeTab === 1\n                                ? \"active\"\n                                : '')}>\n                                <span\n                                    onClick={() => this.setTabCount(1)}\n                                    className=\"mlveda-header-link nav-link\"\n                                    >Key Customization\n                                </span>\n                            </li>\n                            <li\n                                className={\"nav-item \" + (this.props.activeTab === 2\n                                ? 'active'\n                                : '')}>\n                                <span\n                                    onClick={() => this.setTabCount(2)}\n                                    className=\"mlveda-header-link nav-link\"\n                                   >Advanced Customization</span>\n                            </li>\n\n                        </ul>\n                    </div>\n                </nav>\n            </div>\n        )\n    }\n\n}","import React from 'react';\n\nexport class ToggleSwitch extends React.Component {\n  \n  render() {\n    return (\n      <div>\n\n        <div className=\"mlveda-label inline\">\n          {this.props.labelTitle}</div>\n        <label className=\"switch pull-right\">\n\n          <input\n            name={this.props.nameAttribute}\n            onChange={(e) => this.props.handleInputChange(e)}\n            checked={this.props.bindValue}\n            type=\"checkbox\"/>\n          <span className=\"slider round\"></span>\n        </label>\n\n      </div>\n    )\n  }\n}","import React from 'react';\nimport '../styles/section-header.scss'\n\n/* represent title of each section */\nexport class SectionHeader extends React.Component {\n  \n    render() {\n        return (\n            <div>\n                <div className=\"title-wrapper\">{this.props.sectionTitleName}</div>\n                <button onClick={() => this.props.saveSettings()}>Save setting</button>\n            </div>\n        )\n    }\n}","export const currencySwitcherOptions = [\n    {\n        value: 'bottom_with_left',\n        label: 'Left Bottom Corner',\n        name: 'position'\n    }, {\n        value: 'bottom_with_right',\n        label: 'Right Bottom Corner',\n        name: 'position'\n    }, {\n        value: 'top_with_left',\n        label: 'Left Top Corner',\n        name: 'position'\n    }, {\n        value: 'top_with_right',\n        label: 'Right Top Corner',\n        name: 'position'\n    }, {\n        value: 'inline',\n        label: 'In line with Cart in Header',\n        name: 'position'\n    }\n]\n\nexport const postionMesaureOptions = [\n\n    {\n        value: '0px',\n        label: '0px'\n    }, {\n        value: '10px',\n        label: '10px'\n    }, {\n        value: '15px',\n        label: '15px'\n    }, {\n        value: '20px',\n        label: '20px'\n    }, {\n        value: '25px',\n        label: '25px'\n    }, {\n        value: '30px',\n        label: '30px'\n    }, {\n        value: '35px',\n        label: '35px'\n    }, {\n        value: '40px',\n        label: '40px'\n    }\n]\n\n\nexport const priceFormatOptions = [\n    {\n        value: 'money_with_currency_format',\n        label: 'With Currency, ex: $10 CAD',\n        name: 'priceFormate'\n    }, {\n        value: 'money_format',\n        label: 'Without Currency, ex: $10.00',\n        name: 'priceFormate'\n    }\n];","import React from 'react';\nimport Select from 'react-select';\nimport { postionMesaureOptions } from './Common/constant';\n\nconst RenderPositions = (props) => {\n    const selectedPostion = props.getObjectToBIndCSwitcher.value;\n    // const bindValue=postionMesaureOptions.filter((item)=>item.value===)\n    function getPositionMesaure(postionMesure, positionSpace) {\n        props.handleDropDownChange({ ...postionMesure, name: positionSpace })\n    }\n    if (props.getObjectToBIndCSwitcher.value !== 'inline') {\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        {(selectedPostion === 'bottom_with_left' || selectedPostion === 'bottom_with_right')\n                            ? <div>\n                                <div className=\"mlveda-label\">\n                                    Spacing from Bottom\n                                    </div>\n                                <Select\n                                    theme={(theme) => ({\n                                        ...theme,\n                                        colors: {\n                                            ...theme.colors,\n                                            primary25: '#18a689',\n                                            primary: '#18a689'\n                                        }\n                                    })}\n                                    onChange={(event) => getPositionMesaure(event, 'positionBottom')}\n                                    inputProps={{\n                                        name: 'positionBottom'\n                                    }}\n                                    value={postionMesaureOptions.filter((item) => item.value === props.currencySpaces.positionBottom)[0]}\n                                    options={postionMesaureOptions} />\n                            </div>\n                            : null\n                        }\n\n                        {(selectedPostion === 'top_with_left' || selectedPostion === 'top_with_right')\n                            ? <div>\n                                <div className=\"mlveda-label\">\n                                    Spacing from Top\n                                    </div>\n                                <Select\n                                    theme={(theme) => ({\n                                        ...theme,\n                                        colors: {\n                                            ...theme.colors,\n                                            primary25: '#18a689',\n                                            primary: '#18a689'\n                                        }\n                                    })}\n                                    onChange={(event) => getPositionMesaure(event, 'positionTop')}\n                                    inputProps={{\n                                        name: 'positionTop'\n                                    }}\n                                    value={postionMesaureOptions.filter((item) => item.value === props.currencySpaces.positionTop)[0]}\n                                    options={postionMesaureOptions} />\n                            </div>\n                            : null\n                        }\n\n                        {(selectedPostion === 'top_with_left' || selectedPostion === 'bottom_with_left')\n                            ? <div>\n                                <div className=\"mlveda-label\">\n                                    Spacing from Left\n                                    </div>\n                                <Select\n                                    theme={(theme) => ({\n                                        ...theme,\n                                        colors: {\n                                            ...theme.colors,\n                                            primary25: '#18a689',\n                                            primary: '#18a689'\n                                        }\n                                    })}\n                                    onChange={(event) => getPositionMesaure(event, 'positionLeft')}\n                                    inputProps={{\n                                        name: 'positionLeft'\n                                    }}\n                                    value={postionMesaureOptions.filter((item) => item.value === props.currencySpaces.positionLeft)[0]}\n                                    options={postionMesaureOptions} />\n                            </div>\n                            : null\n                        }\n\n                        {(selectedPostion === 'top_with_right' || selectedPostion === 'bottom_with_right')\n                            ? <div>\n                                <div className=\"mlveda-label\">\n                                    Spacing from Right\n                                    </div>\n                                <Select\n                                    theme={(theme) => ({\n                                        ...theme,\n                                        colors: {\n                                            ...theme.colors,\n                                            primary25: '#18a689',\n                                            primary: '#18a689'\n                                        }\n                                    })}\n                                    onChange={(event) => getPositionMesaure(event, 'positionRight')}\n                                    inputProps={{\n                                        name: 'positionRight'\n                                    }}\n                                    value={postionMesaureOptions.filter((item) => item.value === props.currencySpaces.positionRight)[0]}\n                                    options={postionMesaureOptions} />\n                            </div>\n                            : null\n                        }\n\n                    </div>\n                </div>\n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\nexport default RenderPositions;","import React from 'react';\nimport '../styles/key-customization.scss'\nimport { ToggleSwitch } from './Common/ToggleSwitch';\nimport Select from 'react-select';\nimport { currencySwitcherOptions, priceFormatOptions } from './Common/constant';\nimport RenderPositions from './RenderPositions';\n\n\nexport class KeyCustomization extends React.Component {\n\n   \n    handleInputChange = (event) => {\n        this\n            .props\n            .handleInputChange(event)\n    }\n\n\n    /*\n        pass the selected dropdown values to parent\n    */\n    handleDropDownChange = (selectedOption) => {\n        this\n            .props\n            .handleDropDownChange(selectedOption);\n    }\n\n    render() {\n\n        const { enable, positionBottom, positionLeft, positionTop, positionRight, currencyFormat, defaultCurrency } = this.props.state;\n        const positionObject = currencySwitcherOptions.filter((item) => item.value === this.props.state.position)[0];\n        const currency = [];\n        const supportedCurrencies = [];\n        let defaultCurrencyArray = {};\n        for (let item in this.props.state.currency) {\n            currency.push({ value: item, name: 'supportedCurrencies', label: item + ' - ' + this.props.state.currency[item] });\n            if (item === defaultCurrency) {\n                defaultCurrencyArray = { value: item, name: 'defaultCurrency', label: item + ' - ' + this.props.state.currency[item] };\n            }\n        }\n\n        const tmpSupportedCurrencies = this.props.state.supportedCurrencies.trim().split(' ');\n        for (let innerItem of tmpSupportedCurrencies) {\n            const foundCurrency = currency.filter((item) => item.value === innerItem)[0]\n            supportedCurrencies.push(foundCurrency);\n        }\n\n        const currencySpaces = {\n            positionBottom: !positionBottom ? '0px' : positionBottom,\n            positionLeft: !positionLeft ? '0px' : positionLeft,\n            positionTop: !positionTop ? '0px' : positionTop,\n            positionRight: !positionRight ? '0px' : positionRight\n        }\n        return (\n            <div className=\"container-fluid content-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col-sm-12 col-lg-3 col-12\">\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <ToggleSwitch\n                                    labelTitle='Enable Auto Currency App?'\n                                    nameAttribute='enable'\n                                    bindValue={enable}\n                                    handleInputChange={this.handleInputChange} />\n                            </div>\n                        </div>\n                        {/* starting of Currency Switcher Position */}\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <div className=\"mlveda-label\">\n                                    Currency Switcher Position\n                                </div>\n                                <Select\n                                    theme={(theme) => ({\n                                        ...theme,\n                                        colors: {\n                                            ...theme.colors,\n                                            primary25: '#18a689',\n                                            primary: '#18a689'\n                                        }\n                                    })}\n                                    value={positionObject}\n                                    name=\"currencySwitcherPosition\"\n                                    onChange={this.handleDropDownChange}\n                                    options={currencySwitcherOptions} />\n                            </div>\n                        </div>\n\n                        <RenderPositions currencySpaces={currencySpaces}\n                            handleDropDownChange={this.handleDropDownChange}\n                            getObjectToBIndCSwitcher={positionObject}\n                        /> {/* ending of Currency Switcher Position */}\n\n                        {/* starting of Price Format */}\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <div className=\"mlveda-label\">\n                                    Price Format</div>\n                                <Select\n                                    theme={(theme) => ({\n                                        ...theme,\n                                        colors: {\n                                            ...theme.colors,\n                                            primary: '#18a689'\n                                        }\n                                    })}\n                                    value={priceFormatOptions.filter((item) => item.value === currencyFormat)[0]}\n                                    onChange={this.handleChange}\n                                    options={priceFormatOptions} />\n                            </div>\n                        </div>\n                        {/* ending of Price Format */}\n\n                        {/* starting of supported currencies */}\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <div className=\"mlveda-label\">\n                                    Currencies you wish to support</div>\n                                <Select\n                                    isMulti\n                                    theme={(theme) => ({\n                                        ...theme,\n                                        colors: {\n                                            ...theme.colors,\n                                            primary: '#18a689'\n                                        }\n                                    })}\n                                    value={supportedCurrencies}\n                                    onChange={(e) => this.props.setValueForSuppoertedCurrencies(e, 'supportedCurrencies')}\n                                    options={currency} />\n                            </div>\n                        </div>\n                        {/* ending of supported currencies */}\n\n\n                        {/* starting of supported currencies */}\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <div className=\"mlveda-label\">\n                                    Default Currency</div>\n                                <Select\n                                    theme={(theme) => ({\n                                        ...theme,\n                                        colors: {\n                                            ...theme.colors,\n                                            primary: '#18a689'\n                                        }\n                                    })}\n                                    value={defaultCurrencyArray}\n                                    onChange={(e) => {\n                                        const selectedDefaultCurrenc = { ...e, name: 'defaultCurrency' }\n                                        this.handleDropDownChange(selectedDefaultCurrenc)\n                                    }}\n                                    options={currency} />\n                            </div>\n                        </div>\n                        {/* ending of supported currencies */}\n\n\n                    </div>\n                    <div className=\"col-sm-12 col-lg-9 col-12\"></div>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { ToggleSwitch } from './Common/ToggleSwitch';\n\nexport class AdvancedCustomization extends React.Component {\n  \n  handleInputChange = (event) => {\n    this\n      .props\n      .handleInputChange(event)\n  }\n  \n  render() {\n    const {autoSwitch,roundDecimal,hideDecimal,displayFlag} = this.props.state;\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-sm-12 col-lg-3 col-12\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <ToggleSwitch\n                  labelTitle='Auto Switch based on IP address'\n                  nameAttribute='autoSwitch'\n                  bindValue={autoSwitch}\n                  handleInputChange={this.handleInputChange}/>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <ToggleSwitch\n                  labelTitle='Round Decimal Digits to .00?'\n                  nameAttribute='roundDecimal'\n                  bindValue={roundDecimal}\n                  handleInputChange={this.handleInputChange}/>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <ToggleSwitch\n                  labelTitle='Hide Decimal Digits? ( Remove .00 )'\n                  nameAttribute='hideDecimal'\n                  bindValue={hideDecimal}\n                  handleInputChange={this.handleInputChange}/>\n              </div>\n            </div>\n\n             <div className=\"row\">\n              <div className=\"col-12\">\n                <ToggleSwitch\n                  labelTitle='Flag'\n                  nameAttribute='displayFlag'\n                  bindValue={displayFlag}\n                  handleInputChange={this.handleInputChange}/>\n              </div>\n            </div>\n\n            \n\n          </div>\n          <div className=\"col-sm-12 col-lg-12 col-12\">\n            Advanced Second section\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport Select, { components } from 'react-select';\nimport createClass from 'create-react-class';\nimport { currencySwitcherOptions } from './Common/constant';\nimport './basic.scss'\nconst divStyle = {\n    margin: '20px',\n\n};\n\nconst MultiValue = props => {\n    return (\n        <components.MultiValue {...props}>\n            <span>{props.data.label}</span>\n        </components.MultiValue>\n    );\n};\n\nconst Option = createClass({\n    render() {\n        return (\n            <div>\n                <components.Option {...this.props}>\n                    <input\n                        className=\"select-checkbox\"\n                        type=\"checkbox\"\n                        checked={this.props.isSelected}\n                        onChange={() => { }}\n                    />{\" \"}\n                    <label className={'select-checkbox-label  ' + (this.props.isSelected ? 'checked' : '')} >\n                        <span>{this.props.value}</span> </label>\n\n\n                </components.Option>\n            </div>\n        );\n    }\n});\n\nexport default class Basic extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            showSearch: false,\n            searchText: '',\n            enteredText: '',\n            listOfArray: [{\n                value: 'value1',\n                isChecked: false\n            },\n            {\n                value: 'value2',\n                isChecked: false\n            },\n            {\n                value: 'value3',\n                isChecked: false\n            },\n            {\n                value: 'value4',\n                isChecked: false\n            }],\n            filtered: []\n        }\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n    }\n    componentDidMount() {\n        this.setState({\n            filtered: [...this.state.listOfArray]\n        })\n        document.addEventListener('mousedown', this.handleClickOutside, false);\n\n    }\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside, false);\n    }\n    showSearchContainer() {\n        this.setState({\n            showSearch: true,\n\n        })\n    }\n\n    /**\n  * Alert if clicked on outside of element\n  */\n    handleClickOutside(event) {\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            this.setState({\n                showSearch: false\n            })\n        }\n    }\n    \n    /**\n      * Set the wrapper ref\n      */\n    setWrapperRef(node) {\n\n        this.wrapperRef = node;\n    }\n    searchInputChanged(event) {\n        if (event.target.value !== '') {\n            const searchTerm = event.target.value.toLowerCase();\n            const newList = [...this.state.listOfArray.filter((item) => {\n                return item.value.toLowerCase().includes(searchTerm);\n\n            })]\n\n            this.setState({\n                filtered: [...newList]\n            })\n            console.log(this.state.listOfArray);\n        } else {\n            this.setState({\n                filtered: [...this.state.listOfArray]\n            })\n        }\n    }\n    valueChanged(selectedItem, index) {\n        let newArray = [...this.state.filtered];\n        newArray[index].isChecked = !newArray[index].isChecked;\n        this.setState({\n            filtered: [...newArray]\n        })\n        console.log(this.wrapperRef)\n    }\n    render() {\n\n\n        const renderedLi = this.state.filtered.map((item, index) =>\n            <li key={index} onClick={() => { this.valueChanged(item, index) }} >\n                <input\n                    className=\"select-checkbox\"\n                    type=\"checkbox\" onChange={() => { }} checked={item.isChecked} />{\" \"}\n                <label className={'select-checkbox-label  ' + (item.isChecked ? 'checked' : '')} >\n                    <span>{item.value}</span>\n                </label>\n            </li>\n        )\n        return (\n            <div className=\"test\">\n                <div className=\"test\">This is medium font</div>\n\n                <div className=\"search-wrapper\"  >\n                    <div>\n                        <span className=\"tag-name-container\">Test </span>\n                        <span className=\"tag-name-container\">Test12 </span>\n                        <span className=\"tag-name-container\">Test23 </span>\n                        <span className=\"tag-name-container\">Test43 </span>\n                    </div>\n                    <div  >\n                        <button onClick={() => { this.showSearchContainer() }}>Add search</button>\n                    </div>\n                    {\n                        this.state.showSearch ?\n                            <div ref={this.setWrapperRef}>\n                                <div>\n                                    <input onChange={(e) => { this.searchInputChanged(e) }} type=\"text\" />\n                                </div>\n                                <div>\n                                    <ul className=\"search-result-wrapper\">\n                                        {renderedLi}\n                                    </ul>\n                                </div>\n                            </div>\n                            : null\n                    }\n                </div>\n\n\n                <Select\n                    className='custom-select-box'\n                    classNamePrefix='custom-select-box'\n                    isSearchable={false}\n                    options={currencySwitcherOptions} />\n                <div style={divStyle}></div>\n                <Select\n\n\n                    closeMenuOnSelect={false}\n                    placeholder={\"Add more currencies\"}\n                    hideSelectedOptions={false}\n                    isMulti={true}\n                    components={{ Option, MultiValue }}\n                    className='custom-select-box'\n                    classNamePrefix='custom-select-box'\n                    autoBlur={true}\n                    option={Option}\n                    options={currencySwitcherOptions}\n                />\n\n            </div >\n        )\n    }\n\n}","import React from 'react';\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport 'bootstrap/scss/bootstrap.scss';\nimport './styles/app.scss';\nimport { Header } from './components/Common/Header';\nimport { SectionHeader } from './components/SectionHeader';\nimport { KeyCustomization } from './components/KeyCustomization';\nimport { AdvancedCustomization } from './components/AdvancedCustomization';\nimport axios from 'axios';\nimport Basic from './components/basi';\n\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {\n                activeTab: 1,\n                enable: false,\n                autoSwitch: false,\n                roundDecimal: false,\n                hideDecimal: false,\n                displayFlag: false,\n                position: 'inline',\n                positionBottom: false,\n                positionRight: false,\n                positionLeft: false,\n                positionTop: false,\n                currencyFormat: 'money_with_currency_format',\n                currency: {},\n                supportedCurrencies: \"INR\",\n                defaultCurrency: \"INR\",\n                password_enabled: false,\n                storeName: ''\n            }\n        }\n    }\n\n    /* \n        set any checkbox value \n    */\n    handleInputChange = (event) => {\n        const target = event.target;\n        const value = target.type === 'checkbox'\n            ? target.checked\n            : target.value;\n        const name = target.name;\n\n        this.setState({\n            data: {\n                ...this.state.data,\n                [name]: value\n            }\n        }, () => {\n        });\n\n    }\n    componentDidMount() {\n        // console.log(window.location);\n        console.log(this.getParams(window.location))\n        let postFormData = {\n            storeName: 'disneytoys.myshopify.com'\n        };\n\n        // axios\n        //     .get('http://52.37.158.134:8080/currencySwitcherSettingsTest/getSettings?shopName=disn' +\n        //         'eytoys.myshopify.com')\n        //     .then((res) => {\n\n        //         this.setState({\n        //             data:\n        //             {\n        //                 ...this.state.data,\n        //                 ...res.data\n        //             }\n\n        //         }, () => { console.log('Axios data', this.state.data) })\n        //     })\n\n        axios\n            .post('  http://52.37.158.134:8080/currencySwitcherSettingsTest/checkSpan ', postFormData)\n            .then(res => {\n                console.log('Post request data', res.data)\n            })\n    }\n\n    /*\n         get the tabcount from the header compoent\n        1: Key customization\n        2: Advanced customization \n    */\n    setTab = (tabCount) => {\n\n        this.setState({\n            data: {\n                ...this.state.data,\n                activeTab: tabCount\n            }\n        });\n    }\n\n    /* \n        get the querystring value from the url\n        here we are using window location serach params\n     */\n    getParams = (location) => {\n        const searchParams = new URLSearchParams(location.search);\n        return {\n            shopName: searchParams.get('shop') || '',\n            planName: searchParams.get('plan') || ''\n        };\n    }\n\n    /*\n         get the value for supported currencies\n    */\n    setValueForSuppoertedCurrencies = (selectedDropDownOption, nameOfDropDown) => {\n        let supportedCurrenciesString = '';\n        if (selectedDropDownOption.length > 0) {\n            for (let item of selectedDropDownOption) {\n                supportedCurrenciesString += item.value + ' '\n            }\n            this.setState({\n                data: {\n                    ...this.state.data,\n                    [nameOfDropDown]: supportedCurrenciesString.trimRight()\n                }\n            });\n\n\n        } else {\n            if (nameOfDropDown === 'supportedCurrencies') {\n                this.setState({\n                    data: {\n                        ...this.state.data,\n                        [nameOfDropDown]: 'INR '\n                    }\n                });\n            } else {\n                this.setState({\n                    data: {\n                        ...this.state.data,\n                        [nameOfDropDown]: ' '\n                    }\n                });\n            }\n        }\n    }\n\n    /*\n        get the selected dropwon values from the child component\n    */\n    handleDropDownChange = (selectedDropDownOption) => {\n        console.log('selectedDropDownOption', selectedDropDownOption)\n        this.setState({\n            data: {\n                ...this.state.data,\n                [selectedDropDownOption.name]: selectedDropDownOption.value\n            }\n        });\n\n    }\n\n    /*\n        Save the settings selected by user\n    */\n    saveSettings = () => {\n        let postData = { ...this.state.data };\n        if (postData.position === 'bottom_with_left') {\n            postData.positionRight = false;\n            postData.positionTop = false;\n        }\n        else if (postData.position === 'bottom_with_right') {\n            postData.positionLeft = false;\n            postData.positionTop = false;\n        }\n        else if (postData.position === 'top_with_left') {\n            postData.positionRight = false;\n            postData.positionBottom = false;\n        }\n        else if (postData.position === 'top_with_right') {\n            postData.positionBottom = false;\n            postData.positionLeft = false;\n        } else {\n            postData.positionBottom = false;\n            postData.positionLeft = false;\n            postData.positionRight = false;\n            postData.positionTop = false;\n        }\n        console.log('postData', postData)\n        axios\n            .post('http://52.37.158.134:8080/currencySwitcherSettingsTest/saveSettings', postData)\n            .then(res => {\n                console.log('Data saved', res.data)\n            })\n    }\n    render() {\n\n        const sectionTitleName = (this.state.data.activeTab === 1\n            ? 'Key'\n            : 'Advanced') + ' Customization';\n\n        return (\n            <div>\n\n                <Header activeTab={this.state.data.activeTab} setTab={this.setTab} />\n                <Basic />\n                {/* <SectionHeader sectionTitleName={sectionTitleName} saveSettings={this.saveSettings} /> conditional based show tab  */}\n                {/* {this.state.data.activeTab === 1\n                    ? <KeyCustomization\n                        state={this.state.data}\n                        setValueForSuppoertedCurrencies={this.setValueForSuppoertedCurrencies}\n                        handleDropDownChange={this.handleDropDownChange}\n                        handleInputChange={this.handleInputChange} />\n                    : <AdvancedCustomization\n                        state={this.state.data}\n                        handleInputChange={this.handleInputChange} />} */}\n            </div>\n        )\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}