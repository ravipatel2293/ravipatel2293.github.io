{"version":3,"sources":["components/Common/Header.js","components/SectionHeader.js","components/Common/ToggleSwitch.js","components/Common/constant.js","components/RenderPositions.js","components/KeyCustomization.js","components/AdvancedCustomization.js","components/basi.js","App.js","serviceWorker.js","index.js"],"names":["Header","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","tabcount","props","setTab","_this","react_default","a","createElement","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","activeTab","onClick","setTabCount","React","Component","SectionHeader","sectionTitleName","saveSettings","ToggleSwitch","labelTitle","name","nameAttribute","onChange","e","handleInputChange","checked","bindValue","currencySwitcherOptions","label","postionMesaureOptions","priceFormatOptions","RenderPositions","selectedPostion","getObjectToBIndCSwitcher","getPositionMesaure","postionMesure","positionSpace","handleDropDownChange","objectSpread","react_select_esm","theme","colors","primary25","primary","event","inputProps","filter","item","currencySpaces","positionBottom","options","positionTop","positionLeft","positionRight","divStyle","margin","MultiValue","data","Option","render","isSelected","Basic","call","onInputChange","query","_ref","action","setState","inputValue","state","showSearch","searchText","enteredText","listOfArray","isChecked","filtered","setWrapperRef","bind","assertThisInitialized","handleClickOutside","toConsumableArray","document","addEventListener","isSwitchOn","removeEventListener","wrapperRef","contains","target","node","searchTerm","toLowerCase","newList","includes","console","log","selectedItem","index","newArray","_this2","renderedLi","map","valueChanged","forceUpdate","classNamePrefix","isSearchable","style","placeholder","hideSelectedOptions","isMulti","components","option","blurInputOnSelect","closeMenuOnSelect","showSearchContainer","ref","searchInputChanged","App","defineProperty","tabCount","getParams","location","searchParams","URLSearchParams","search","shopName","get","planName","setValueForSuppoertedCurrencies","selectedDropDownOption","nameOfDropDown","supportedCurrenciesString","length","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","trimRight","postData","position","axios","post","then","res","enable","autoSwitch","roundDecimal","hideDecimal","displayFlag","currencyFormat","currency","supportedCurrencies","defaultCurrency","password_enabled","storeName","window","BrowserRouter","Header_Header","Switch","Route","exact","path","component","SectionHeader_SectionHeader","Boolean","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.894ff5ce.chunk.js","sourcesContent":["import React from 'react';\n\nimport '../../styles/common/header.scss'\n\n/*contains html and code for header*/\nexport class Header extends React.Component {\n\n    /* set the tabcount and pass that value to header component */\n    setTabCount(tabcount) {\n        this\n            .props\n            .setTab(tabcount);\n    }\n\n    render() {\n        return (\n            <div className=\"\">\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-nav-color\">\n                    <span className=\"navbar-brand\">Test</span>\n                    <button\n                        className=\"navbar-toggler\"\n                        type=\"button\"\n                        data-toggle=\"collapse\"\n                        data-target=\"#navbarNav\"\n                        aria-controls=\"navbarNav\"\n                        aria-expanded=\"false\"\n                        aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                        <ul className=\"navbar-nav\">\n                            <li\n                                className={\"nav-item \" + (this.props.activeTab === 1\n                                ? \"active\"\n                                : '')}>\n                                <span\n                                    onClick={() => this.setTabCount(1)}\n                                    className=\"mlveda-header-link nav-link\"\n                                    >Key Customization\n                                </span>\n                            </li>\n                            <li\n                                className={\"nav-item \" + (this.props.activeTab === 2\n                                ? 'active'\n                                : '')}>\n                                <span\n                                    onClick={() => this.setTabCount(2)}\n                                    className=\"mlveda-header-link nav-link\"\n                                   >Advanced Customization</span>\n                            </li>\n\n                        </ul>\n                    </div>\n                </nav>\n            </div>\n        )\n    }\n\n}","import React from 'react';\nimport '../styles/section-header.scss'\n\n/* represent title of each section */\nexport class SectionHeader extends React.Component {\n  \n    render() {\n        return (\n            <div>\n                <div className=\"title-wrapper\">{this.props.sectionTitleName}</div>\n                <button onClick={() => this.props.saveSettings()}>Save setting</button>\n            </div>\n        )\n    }\n}","import React from 'react';\n\nexport class ToggleSwitch extends React.Component {\n  \n  render() {\n    return (\n      <div>\n\n        <div className=\"mlveda-label inline\">\n          {this.props.labelTitle}</div>\n        <label className=\"switch pull-right\">\n\n          <input\n            name={this.props.nameAttribute}\n            onChange={(e) => this.props.handleInputChange(e)}\n            checked={this.props.bindValue}\n            type=\"checkbox\"/>\n          <span className=\"slider round\"></span>\n        </label>\n\n      </div>\n    )\n  }\n}","export const currencySwitcherOptions = [\n    {\n        value: 'bottom_with_left',\n        label: 'Left Bottom Corner',\n        name: 'position'\n    }, {\n        value: 'bottom_with_right',\n        label: 'Right Bottom Corner',\n        name: 'position'\n    }, {\n        value: 'top_with_left',\n        label: 'Left Top Corner',\n        name: 'position'\n    }, {\n        value: 'top_with_right',\n        label: 'Right Top Corner',\n        name: 'position'\n    }, {\n        value: 'inline',\n        label: 'In line with Cart in Header',\n        name: 'position'\n    }\n]\n\nexport const postionMesaureOptions = [\n\n    {\n        value: '0px',\n        label: '0px'\n    }, {\n        value: '10px',\n        label: '10px'\n    }, {\n        value: '15px',\n        label: '15px'\n    }, {\n        value: '20px',\n        label: '20px'\n    }, {\n        value: '25px',\n        label: '25px'\n    }, {\n        value: '30px',\n        label: '30px'\n    }, {\n        value: '35px',\n        label: '35px'\n    }, {\n        value: '40px',\n        label: '40px'\n    }\n]\n\n\nexport const priceFormatOptions = [\n    {\n        value: 'money_with_currency_format',\n        label: 'With Currency, ex: $10 CAD',\n        name: 'priceFormate'\n    }, {\n        value: 'money_format',\n        label: 'Without Currency, ex: $10.00',\n        name: 'priceFormate'\n    }\n];","import React from 'react';\nimport Select from 'react-select';\nimport { postionMesaureOptions } from './Common/constant';\n\nconst RenderPositions = (props) => {\n    const selectedPostion = props.getObjectToBIndCSwitcher.value;\n    // const bindValue=postionMesaureOptions.filter((item)=>item.value===)\n    function getPositionMesaure(postionMesure, positionSpace) {\n        props.handleDropDownChange({ ...postionMesure, name: positionSpace })\n    }\n    if (props.getObjectToBIndCSwitcher.value !== 'inline') {\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        {(selectedPostion === 'bottom_with_left' || selectedPostion === 'bottom_with_right')\n                            ? <div>\n                                <div className=\"mlveda-label\">\n                                    Spacing from Bottom\n                                    </div>\n                                <Select\n                                    theme={(theme) => ({\n                                        ...theme,\n                                        colors: {\n                                            ...theme.colors,\n                                            primary25: '#18a689',\n                                            primary: '#18a689'\n                                        }\n                                    })}\n                                    onChange={(event) => getPositionMesaure(event, 'positionBottom')}\n                                    inputProps={{\n                                        name: 'positionBottom'\n                                    }}\n                                    value={postionMesaureOptions.filter((item) => item.value === props.currencySpaces.positionBottom)[0]}\n                                    options={postionMesaureOptions} />\n                            </div>\n                            : null\n                        }\n\n                        {(selectedPostion === 'top_with_left' || selectedPostion === 'top_with_right')\n                            ? <div>\n                                <div className=\"mlveda-label\">\n                                    Spacing from Top\n                                    </div>\n                                <Select\n                                    theme={(theme) => ({\n                                        ...theme,\n                                        colors: {\n                                            ...theme.colors,\n                                            primary25: '#18a689',\n                                            primary: '#18a689'\n                                        }\n                                    })}\n                                    onChange={(event) => getPositionMesaure(event, 'positionTop')}\n                                    inputProps={{\n                                        name: 'positionTop'\n                                    }}\n                                    value={postionMesaureOptions.filter((item) => item.value === props.currencySpaces.positionTop)[0]}\n                                    options={postionMesaureOptions} />\n                            </div>\n                            : null\n                        }\n\n                        {(selectedPostion === 'top_with_left' || selectedPostion === 'bottom_with_left')\n                            ? <div>\n                                <div className=\"mlveda-label\">\n                                    Spacing from Left\n                                    </div>\n                                <Select\n                                    theme={(theme) => ({\n                                        ...theme,\n                                        colors: {\n                                            ...theme.colors,\n                                            primary25: '#18a689',\n                                            primary: '#18a689'\n                                        }\n                                    })}\n                                    onChange={(event) => getPositionMesaure(event, 'positionLeft')}\n                                    inputProps={{\n                                        name: 'positionLeft'\n                                    }}\n                                    value={postionMesaureOptions.filter((item) => item.value === props.currencySpaces.positionLeft)[0]}\n                                    options={postionMesaureOptions} />\n                            </div>\n                            : null\n                        }\n\n                        {(selectedPostion === 'top_with_right' || selectedPostion === 'bottom_with_right')\n                            ? <div>\n                                <div className=\"mlveda-label\">\n                                    Spacing from Right\n                                    </div>\n                                <Select\n                                    theme={(theme) => ({\n                                        ...theme,\n                                        colors: {\n                                            ...theme.colors,\n                                            primary25: '#18a689',\n                                            primary: '#18a689'\n                                        }\n                                    })}\n                                    onChange={(event) => getPositionMesaure(event, 'positionRight')}\n                                    inputProps={{\n                                        name: 'positionRight'\n                                    }}\n                                    value={postionMesaureOptions.filter((item) => item.value === props.currencySpaces.positionRight)[0]}\n                                    options={postionMesaureOptions} />\n                            </div>\n                            : null\n                        }\n\n                    </div>\n                </div>\n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\nexport default RenderPositions;","import React from 'react';\nimport '../styles/key-customization.scss'\nimport { ToggleSwitch } from './Common/ToggleSwitch';\nimport Select from 'react-select';\nimport { currencySwitcherOptions, priceFormatOptions } from './Common/constant';\nimport RenderPositions from './RenderPositions';\n\n\nexport class KeyCustomization extends React.Component {\n\n\n   handleInputChange = (event) => {\n      this.props.handleInputChange(event)\n   }\n\n\n   /*\n       pass the selected dropdown values to parent\n   */\n   handleDropDownChange = (selectedOption) => {\n      this\n         .props\n         .handleDropDownChange(selectedOption);\n   }\n\n   render() {\n\n      const { enable, positionBottom, positionLeft, positionTop, positionRight, currencyFormat, defaultCurrency } = this.props.state;\n      const positionObject = currencySwitcherOptions.filter((item) => item.value === this.props.state.position)[0];\n      const currency = [];\n      const supportedCurrencies = [];\n      let defaultCurrencyArray = {};\n      for (let item in this.props.state.currency) {\n         currency.push({ value: item, name: 'supportedCurrencies', label: item + ' - ' + this.props.state.currency[item] });\n         if (item === defaultCurrency) {\n            defaultCurrencyArray = { value: item, name: 'defaultCurrency', label: item + ' - ' + this.props.state.currency[item] };\n         }\n      }\n\n      const tmpSupportedCurrencies = this.props.state.supportedCurrencies.trim().split(' ');\n      for (let innerItem of tmpSupportedCurrencies) {\n         const foundCurrency = currency.filter((item) => item.value === innerItem)[0]\n         supportedCurrencies.push(foundCurrency);\n      }\n\n      const currencySpaces = {\n         positionBottom: !positionBottom ? '0px' : positionBottom,\n         positionLeft: !positionLeft ? '0px' : positionLeft,\n         positionTop: !positionTop ? '0px' : positionTop,\n         positionRight: !positionRight ? '0px' : positionRight\n      }\n      return (\n         <div className=\"container-fluid content-wrapper\">\n            <div className=\"row\">\n               <div className=\"col-sm-12 col-lg-3 col-12\">\n                  <div className=\"row\">\n                     <div className=\"col-12\">\n                        <ToggleSwitch\n                           labelTitle='Enable Auto Currency App?'\n                           nameAttribute='enable'\n                           bindValue={enable}\n                           handleInputChange={this.handleInputChange} />\n                     </div>\n                  </div>\n                  {/* starting of Currency Switcher Position */}\n                  <div className=\"row\">\n                     <div className=\"col-12\">\n                        <div className=\"mlveda-label\">\n                           Currency Switcher Position\n                                </div>\n                        <Select\n                           theme={(theme) => ({\n                              ...theme,\n                              colors: {\n                                 ...theme.colors,\n                                 primary25: '#18a689',\n                                 primary: '#18a689'\n                              }\n                           })}\n                           value={positionObject}\n                           name=\"currencySwitcherPosition\"\n                           onChange={this.handleDropDownChange}\n                           options={currencySwitcherOptions} />\n                     </div>\n                  </div>\n\n                  <RenderPositions currencySpaces={currencySpaces}\n                     handleDropDownChange={this.handleDropDownChange}\n                     getObjectToBIndCSwitcher={positionObject}\n                  /> {/* ending of Currency Switcher Position */}\n\n                  {/* starting of Price Format */}\n                  <div className=\"row\">\n                     <div className=\"col-12\">\n                        <div className=\"mlveda-label\">\n                           Price Format</div>\n                        <Select\n                           theme={(theme) => ({\n                              ...theme,\n                              colors: {\n                                 ...theme.colors,\n                                 primary: '#18a689'\n                              }\n                           })}\n                           value={priceFormatOptions.filter((item) => item.value === currencyFormat)[0]}\n                           onChange={this.handleChange}\n                           options={priceFormatOptions} />\n                     </div>\n                  </div>\n                  {/* ending of Price Format */}\n\n                  {/* starting of supported currencies */}\n                  <div className=\"row\">\n                     <div className=\"col-12\">\n                        <div className=\"mlveda-label\">\n                           Currencies you wish to support</div>\n                        <Select\n                           isMulti\n                           theme={(theme) => ({\n                              ...theme,\n                              colors: {\n                                 ...theme.colors,\n                                 primary: '#18a689'\n                              }\n                           })}\n                           value={supportedCurrencies}\n                           onChange={(e) => this.props.setValueForSuppoertedCurrencies(e, 'supportedCurrencies')}\n                           options={currency} />\n                     </div>\n                  </div>\n                  {/* ending of supported currencies */}\n\n\n                  {/* starting of supported currencies */}\n                  <div className=\"row\">\n                     <div className=\"col-12\">\n                        <div className=\"mlveda-label\">\n                           Default Currency</div>\n                        <Select\n                           theme={(theme) => ({\n                              ...theme,\n                              colors: {\n                                 ...theme.colors,\n                                 primary: '#18a689'\n                              }\n                           })}\n                           value={defaultCurrencyArray}\n                           onChange={(e) => {\n                              const selectedDefaultCurrenc = { ...e, name: 'defaultCurrency' }\n                              this.handleDropDownChange(selectedDefaultCurrenc)\n                           }}\n                           options={currency} />\n                     </div>\n                  </div>\n                  {/* ending of supported currencies */}\n\n\n               </div>\n               <div className=\"col-sm-12 col-lg-9 col-12\"></div>\n            </div>\n         </div>\n      )\n   }\n}","import React from 'react';\nimport { ToggleSwitch } from './Common/ToggleSwitch';\n\nexport class AdvancedCustomization extends React.Component {\n\n   handleInputChange = (event) => {\n      this\n         .props\n         .handleInputChange(event)\n   }\n\n   render() {\n      const { autoSwitch, roundDecimal, hideDecimal, displayFlag } = this.props.state;\n      return (\n         <div className=\"container-fluid\">\n            <div className=\"row\">\n               <div className=\"col-sm-12 col-lg-3 col-12\">\n                  <div className=\"row\">\n                     <div className=\"col-12\">\n                        <ToggleSwitch\n                           labelTitle='Auto Switch based on IP address'\n                           nameAttribute='autoSwitch'\n                           bindValue={autoSwitch}\n                           handleInputChange={this.handleInputChange} />\n                     </div>\n                  </div>\n                  <div className=\"row\">\n                     <div className=\"col-12\">\n                        <ToggleSwitch\n                           labelTitle='Round Decimal Digits to .00?'\n                           nameAttribute='roundDecimal'\n                           bindValue={roundDecimal}\n                           handleInputChange={this.handleInputChange} />\n                     </div>\n                  </div>\n                  <div className=\"row\">\n                     <div className=\"col-12\">\n                        <ToggleSwitch\n                           labelTitle='Hide Decimal Digits? ( Remove .00 )'\n                           nameAttribute='hideDecimal'\n                           bindValue={hideDecimal}\n                           handleInputChange={this.handleInputChange} />\n                     </div>\n                  </div>\n\n                  <div className=\"row\">\n                     <div className=\"col-12\">\n                        <ToggleSwitch\n                           labelTitle='Flag'\n                           nameAttribute='displayFlag'\n                           bindValue={displayFlag}\n                           handleInputChange={this.handleInputChange} />\n                     </div>\n                  </div>\n\n\n\n               </div>\n               <div className=\"col-sm-12 col-lg-12 col-12\">\n                  Advanced Second section\n          </div>\n            </div>\n         </div>\n      )\n   }\n}","import React from 'react';\nimport Select, { components } from 'react-select';\nimport createClass from 'create-react-class';\nimport { currencySwitcherOptions } from './Common/constant';\nimport './basic.scss'\nconst divStyle = {\n   margin: '20px',\n\n};\n\nconst MultiValue = props => {\n   return (\n      <components.MultiValue {...props}>\n         <span>{props.data.label}</span>\n      </components.MultiValue>\n   );\n};\n\nconst Option = createClass({\n   render() {\n      return (\n         <div>\n            <components.Option {...this.props}>\n               <input\n                  className=\"select-checkbox\"\n                  type=\"checkbox\"\n                  checked={this.props.isSelected}\n                  onChange={() => { }}\n               />{\" \"}\n               <label className={'select-checkbox-label  ' + (this.props.isSelected ? 'checked' : '')} >\n                  <span>{this.props.value}</span> </label>\n\n\n            </components.Option>\n         </div>\n      );\n   }\n});\n\nexport default class Basic extends React.Component {\n   constructor(props) {\n      super(props)\n      this.state = {\n         showSearch: false,\n         searchText: '',\n         enteredText: '',\n         listOfArray: [{\n            value: 'value1',\n            isChecked: false\n         },\n         {\n            value: 'value2',\n            isChecked: false\n         },\n         {\n            value: 'value3',\n            isChecked: false\n         },\n         {\n            value: 'value4',\n            isChecked: false\n         }],\n         filtered: [],\n         inputValue: ''\n      }\n      this.setWrapperRef = this.setWrapperRef.bind(this);\n      this.handleClickOutside = this.handleClickOutside.bind(this);\n   }\n   componentDidMount() {\n      this.setState({\n         filtered: [...this.state.listOfArray]\n      })\n      document.addEventListener('mousedown', this.handleClickOutside, false);\n      this.isSwitchOn = false;\n   }\n   componentWillUnmount() {\n      document.removeEventListener('mousedown', this.handleClickOutside, false);\n   }\n   showSearchContainer() {\n      this.setState({\n         showSearch: true,\n\n      })\n   }\n\n   /* ... */\n\n   onInputChange = (query, { action }) => {\n      // Prevents resetting our input after option has been selected\n      if (action !== \"set-value\") this.setState({ inputValue: query });\n   }\n\n   /**\n   * Alert if clicked on outside of element\n   */\n   handleClickOutside(event) {\n      if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n         this.setState({\n            showSearch: false\n         })\n      }\n   }\n\n   /**\n     * Set the wrapper ref\n     */\n   setWrapperRef(node) {\n\n      this.wrapperRef = node;\n   }\n   searchInputChanged(event) {\n      if (event.target.value !== '') {\n         const searchTerm = event.target.value.toLowerCase();\n         const newList = [...this.state.listOfArray.filter((item) => {\n            return item.value.toLowerCase().includes(searchTerm);\n\n         })]\n\n         this.setState({\n            filtered: [...newList]\n         })\n         console.log(this.state.listOfArray);\n      } else {\n         this.setState({\n            filtered: [...this.state.listOfArray]\n         })\n      }\n   }\n   valueChanged(selectedItem, index) {\n      let newArray = [...this.state.filtered];\n      newArray[index].isChecked = !newArray[index].isChecked;\n      this.setState({\n         filtered: [...newArray]\n      })\n      console.log(this.wrapperRef)\n   }\n   render() {\n\n\n      const renderedLi = this.state.filtered.map((item, index) =>\n         <li key={index} onClick={() => { this.valueChanged(item, index) }} >\n            <input\n               className=\"select-checkbox\"\n               type=\"checkbox\" onChange={() => { }} checked={item.isChecked} />{\" \"}\n            <label className={'select-checkbox-label  ' + (item.isChecked ? 'checked' : '')} >\n               <span>{item.value}</span>\n            </label>\n         </li>\n      )\n      return (\n         <div className=\"test\">\n\n            <div>\n               <label className=\"custom-label\"> Font Styles:</label><br />\n               <div className=\"light-font\">This is light font.</div>\n               <div className=\"regular-font\">This is regular font</div>\n               <div className=\"bold-font\">This is bold font</div>\n            </div>\n\n            <div className=\"mt25\">\n               <label className=\"custom-label\"> Text-box:</label>\n               <input type=\"text\"></input>\n            </div>\n            <div className=\"mt25\">\n               <div className=\"row\">\n                  <div className=\"col-md-4\">\n                     <label className=\"custom-label\">Primary-button:</label><br />\n                     <button className=\"btn-custom-primary\">This is button</button></div>\n                  <div className=\"col-md-4\">\n                     <label className=\"custom-label\">Secondary-button:</label><br />\n                     <button className=\"btn-custom-secondary\">This is button</button></div>\n               </div>\n            </div>\n            <div className=\"mt25\">\n               <label className=\"custom-label\">Toggle switch:</label><br />\n               <div onClick={() => { this.isSwitchOn = !this.isSwitchOn; this.forceUpdate() }}\n                  className={'switch-wrapper ' + (this.isSwitchOn ? 'on' : 'off')}>\n                  <div className=\"is on\">\n                     Show\n                     <div className=\"is off\">Hide</div>\n                  </div>\n               </div>\n            </div>\n\n            <div className=\"mt25\">\n               <label className=\"custom-label\">Single select dropdown:</label><br />\n               <Select\n                  className='custom-select-box'\n                  classNamePrefix='custom-select-box'\n                  isSearchable={false}\n                  options={currencySwitcherOptions} />\n               <div style={divStyle}></div>\n            </div>\n\n            <div className=\"mt25\">\n            <label className=\"custom-label\">Multi select dropdown:</label><br />\n               <Select\n                  inputValue={this.state.inputValue}\n                  placeholder={\"Add more currencies\"}\n                  hideSelectedOptions={false}\n                  isMulti={true}\n                  components={{ Option, MultiValue }}\n                  className='custom-select-box'\n                  classNamePrefix='custom-select-box'\n                  option={Option}\n                  options={currencySwitcherOptions}\n                  blurInputOnSelect={false} //set by default, but to be sure\n                  closeMenuOnSelect={false} //prevents menu close after select, which would also result in input blur\n                  onInputChange={this.onInputChange}\n               />\n            </div>\n            <div className=\"search-wrapper\"  >\n               <div>\n                  <span className=\"tag-name-container\">Test </span>\n                  <span className=\"tag-name-container\">Test12 </span>\n                  <span className=\"tag-name-container\">Test23 </span>\n                  <span className=\"tag-name-container\">Test43 </span>\n               </div>\n               <div  >\n                  <button onClick={() => { this.showSearchContainer() }}>Add search</button>\n               </div>\n               {\n                  this.state.showSearch ?\n                     <div ref={this.setWrapperRef}>\n                        <div>\n                           <input onChange={(e) => { this.searchInputChanged(e) }} type=\"text\" />\n                        </div>\n                        <div>\n                           <ul className=\"search-result-wrapper\">\n                              {renderedLi}\n                           </ul>\n                        </div>\n                     </div>\n                     : null\n               }\n            </div>\n\n\n\n\n         </div >\n      )\n   }\n\n}","import React from 'react';\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport 'bootstrap/scss/bootstrap.scss';\nimport './styles/app.scss';\nimport { Header } from './components/Common/Header';\nimport { SectionHeader } from './components/SectionHeader';\nimport { KeyCustomization } from './components/KeyCustomization';\nimport { AdvancedCustomization } from './components/AdvancedCustomization';\nimport axios from 'axios';\nimport Basic from './components/basi';\nimport {\n   BrowserRouter as Router,\n   Route,\n   Link,\n   Switch,\n   Redirect\n} from 'react-router-dom';\n\n\nexport class App extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         data: {\n            activeTab: 1,\n            enable: false,\n            autoSwitch: false,\n            roundDecimal: false,\n            hideDecimal: false,\n            displayFlag: false,\n            position: 'inline',\n            positionBottom: false,\n            positionRight: false,\n            positionLeft: false,\n            positionTop: false,\n            currencyFormat: 'money_with_currency_format',\n            currency: {},\n            supportedCurrencies: \"INR\",\n            defaultCurrency: \"INR\",\n            password_enabled: false,\n            storeName: ''\n         }\n      }\n   }\n\n   /* \n       set any checkbox value \n   */\n   handleInputChange = (event) => {\n      const target = event.target;\n      const value = target.type === 'checkbox'\n         ? target.checked\n         : target.value;\n      const name = target.name;\n\n      this.setState({\n         data: {\n            ...this.state.data,\n            [name]: value\n         }\n      }, () => {\n      });\n\n   }\n   componentDidMount() {\n      // console.log(window.location);\n      console.log(this.getParams(window.location))\n      let postFormData = {\n         storeName: 'disneytoys.myshopify.com'\n      };\n\n      // axios\n      //     .get('http://52.37.158.134:8080/currencySwitcherSettingsTest/getSettings?shopName=disn' +\n      //         'eytoys.myshopify.com')\n      //     .then((res) => {\n\n      //         this.setState({\n      //             data:\n      //             {\n      //                 ...this.state.data,\n      //                 ...res.data\n      //             }\n\n      //         }, () => { console.log('Axios data', this.state.data) })\n      //     })\n\n      axios\n         .post('  http://52.37.158.134:8080/currencySwitcherSettingsTest/checkSpan ', postFormData)\n         .then(res => {\n            console.log('Post request data', res.data)\n         })\n   }\n\n   /*\n        get the tabcount from the header compoent\n       1: Key customization\n       2: Advanced customization \n   */\n   setTab = (tabCount) => {\n\n      this.setState({\n         data: {\n            ...this.state.data,\n            activeTab: tabCount\n         }\n      });\n   }\n\n   /* \n       get the querystring value from the url\n       here we are using window location serach params\n    */\n   getParams = (location) => {\n      const searchParams = new URLSearchParams(location.search);\n      return {\n         shopName: searchParams.get('shop') || '',\n         planName: searchParams.get('plan') || ''\n      };\n   }\n\n   /*\n        get the value for supported currencies\n   */\n   setValueForSuppoertedCurrencies = (selectedDropDownOption, nameOfDropDown) => {\n      let supportedCurrenciesString = '';\n      if (selectedDropDownOption.length > 0) {\n         for (let item of selectedDropDownOption) {\n            supportedCurrenciesString += item.value + ' '\n         }\n         this.setState({\n            data: {\n               ...this.state.data,\n               [nameOfDropDown]: supportedCurrenciesString.trimRight()\n            }\n         });\n\n\n      } else {\n         if (nameOfDropDown === 'supportedCurrencies') {\n            this.setState({\n               data: {\n                  ...this.state.data,\n                  [nameOfDropDown]: 'INR '\n               }\n            });\n         } else {\n            this.setState({\n               data: {\n                  ...this.state.data,\n                  [nameOfDropDown]: ' '\n               }\n            });\n         }\n      }\n   }\n\n   /*\n       get the selected dropwon values from the child component\n   */\n   handleDropDownChange = (selectedDropDownOption) => {\n      console.log('selectedDropDownOption', selectedDropDownOption)\n      this.setState({\n         data: {\n            ...this.state.data,\n            [selectedDropDownOption.name]: selectedDropDownOption.value\n         }\n      });\n\n   }\n\n   /*\n       Save the settings selected by user\n   */\n   saveSettings = () => {\n      let postData = { ...this.state.data };\n      if (postData.position === 'bottom_with_left') {\n         postData.positionRight = false;\n         postData.positionTop = false;\n      }\n      else if (postData.position === 'bottom_with_right') {\n         postData.positionLeft = false;\n         postData.positionTop = false;\n      }\n      else if (postData.position === 'top_with_left') {\n         postData.positionRight = false;\n         postData.positionBottom = false;\n      }\n      else if (postData.position === 'top_with_right') {\n         postData.positionBottom = false;\n         postData.positionLeft = false;\n      } else {\n         postData.positionBottom = false;\n         postData.positionLeft = false;\n         postData.positionRight = false;\n         postData.positionTop = false;\n      }\n      console.log('postData', postData)\n      axios\n         .post('http://52.37.158.134:8080/currencySwitcherSettingsTest/saveSettings', postData)\n         .then(res => {\n            console.log('Data saved', res.data)\n         })\n   }\n   render() {\n\n      const sectionTitleName = (this.state.data.activeTab === 1\n         ? 'Key'\n         : 'Advanced') + ' Customization';\n\n      return (\n         <Router>\n            <div>\n\n               <Header activeTab={this.state.data.activeTab} setTab={this.setTab} />\n               {/* <SectionHeader sectionTitleName={sectionTitleName} saveSettings={this.saveSettings} /> conditional based show tab  */}\n               {/* {this.state.data.activeTab === 1\n                    ? <KeyCustomization\n                        state={this.state.data}\n                        setValueForSuppoertedCurrencies={this.setValueForSuppoertedCurrencies}\n                        handleDropDownChange={this.handleDropDownChange}\n                        handleInputChange={this.handleInputChange} />\n                    : <AdvancedCustomization\n                        state={this.state.data}\n                        handleInputChange={this.handleInputChange} />} */}\n\n\n               <div className=\"App\">\n\n                  <Switch>\n                     <Route exact path=\"/\" component={Basic} />\n                     <Route exact path=\"/key-setting\" component={()=><SectionHeader  sectionTitleName={sectionTitleName} saveSettings={this.saveSettings}/>} />\n                     {/* <Route path=\"/hello\" component={Hello} />\n                     <Route path=\"/about\" component={About} />\n                     <Route path=\"/books\" component={Books} /> */}\n                  </Switch>\n               </div>\n            </div>\n         </Router>\n\n      )\n   }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}